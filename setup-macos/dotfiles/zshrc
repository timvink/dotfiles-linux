# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

export TERM="xterm-256color" # for right colours in tmux

export LC_ALL=en_US.UTF-8

# Ensure user-installed binaries take precedence
# This way python installed by homebrew will be used insgtead of macOS python
# https://hackercodex.com/guide/mac-development-configuration/
export PATH=/usr/local/bin:$PATH

# But make sure miniconda comes first 
export PATH=$HOME/Developer/miniconda3/bin:$PATH


# The next line updates PATH for the Google Cloud SDK.
#if [ -f '/Users/timvink/google-cloud-sdk/path.bash.inc' ]; then source '/Users/timvink/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
#if [ -f '/Users/timvink/google-cloud-sdk/completion.bash.inc' ]; then source '/Users/timvink/google-cloud-sdk/completion.bash.inc'; fi

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# https://github.com/bhilburn/powerlevel9k/blob/master/README.md
ZSH_THEME="powerlevel9k/powerlevel9k"
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(anaconda context dir rbenv vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs time)
DEFAULT_USER="ue86yw" # helps with much shorter prompt!

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  docker
  tmux
  osx
  zsh-syntax-highlighting
  zsh-autosuggestions
  # autoupdate
)

source $ZSH/oh-my-zsh.sh

# User configuration

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# Also required to set for tmuxinator
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='vim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
source ~/.bash_aliases

# and some specific aliases only for zsh.
alias ls='exa -lah --long --grid --time-style=long-iso'
alias lss='exa -ah1 --time-style=long-iso'

# On my MacOS, set proxy
comp_hostname=$(hostname -f)
comp_macbookpro="APM3LC02XV9NEJHD2"
if [ "$comp_hostname" = "$comp_macbookpro" ]; then
    http_proxy=localhost:3128
    export http_proxy=$http_proxy
    export HTTP_PROXY=$http_proxy
    export https_proxy=$http_proxy
    export HTTPS_PROXY=$http_proxy
    export ALL_PROXY=$http_proxy
    export NO_PROXY=localhost,127.0.0.1
    export no_proxy=localhost,127.0.0.1
    echo "proxy set"
fi


# Installed newer version of ruby using homebrew
# To use, I need to update my path
#export PATH="/usr/local/opt/ruby/bin:$PATH"
#export LDFLAGS="-L/usr/local/opt/ruby/lib"
#export CPPFLAGS="-I/usr/local/opt/ruby/include"
#export PKG_CONFIG_PATH="/usr/local/opt/ruby/lib/pkgconfig"
#export GEM_HOME=$HOME/gems
#export PATH=$HOME/.gem/bin:$PATH


# GCC libffi compilors that use makefiles
#export LDFLAGS="-L/usr/local/opt/libffi/lib"
#export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"

# PDF stuff
# export PATH="/usr/local/opt/libxml2/bin:$PATH"

# The next line updates PATH for the Google Cloud SDK.
# if [ -f '/Users/ue86yw/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/ue86yw/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
# if [ -f '/Users/ue86yw/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/ue86yw/google-cloud-sdk/completion.zsh.inc'; fi


# Conda remove default env from prompt
PS1=$(echo $PS1 | sed 's/(base)//') 
PS1=$(echo $PS1 | sed 's/(miniconda3)//') 

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/ue86yw/Developer/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/ue86yw/Developer/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/ue86yw/Developer/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/ue86yw/Developer/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

